#https://leetcode.com/problems/minimum-number-of-days-to-make-m-bouquets/

class Solution(object):
    def minDays(self, bloomDay, m, k):
        """
        :type bloomDay: List[int]
        :type m: int
        :type k: int
        :rtype: int
        """
        if ((m*k)>len(bloomDay)):
            return -1
        low=min(bloomDay)
        high=max(bloomDay)
        while(low<=high):
            day=(low+high)//2
            flowers=0
            bouquets=0
            for num in bloomDay:
                if (day>=num):
                    flowers+=1
                    if (flowers==k):
                        bouquets+=1
                        flowers=0
                else:
                    flowers=0
            if(bouquets>=m):
                high=day-1
            else:
                low=day+1
        return low
